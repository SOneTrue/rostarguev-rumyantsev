from django.conf import settings
from django.db import models
from django.utils import timezone
class Category(models.Model):
    name = models.CharField("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", max_length=120)

    def __str__(self):
        return self.name

class Store(models.Model):
    name    = models.CharField("–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞", max_length=120)
    address = models.CharField("–ê–¥—Ä–µ—Å", max_length=250, blank=True)
    website = models.URLField("–°–∞–π—Ç", blank=True)

    def __str__(self):
        return self.name

class Product(models.Model):
    name     = models.CharField("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", max_length=120)
    category = models.ForeignKey(Category, verbose_name="–ö–∞—Ç–µ–≥–æ—Ä–∏—è", on_delete=models.CASCADE)
    image    = models.ImageField("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", upload_to='products/', blank=True)

    def __str__(self):
        return self.name

class StoreProduct(models.Model):
    product  = models.ForeignKey(Product, on_delete=models.CASCADE, verbose_name="–¢–æ–≤–∞—Ä")
    store    = models.ForeignKey(Store,   on_delete=models.CASCADE, verbose_name="–ú–∞–≥–∞–∑–∏–Ω")
    price    = models.DecimalField("–¶–µ–Ω–∞", max_digits=8, decimal_places=2)
    discount = models.BooleanField("–°–∫–∏–¥–∫–∞", default=False)
    updated  = models.DateTimeField("–û–±–Ω–æ–≤–ª–µ–Ω–æ", auto_now=True)

    class Meta:
        unique_together = ("product", "store")
        verbose_name = "–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ"
        verbose_name_plural = "–¶–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º"

    def __str__(self):
        return f"{self.product} –≤ {self.store}: {self.price}‚ÇΩ"

class PriceSuggestion(models.Model):
    product         = models.ForeignKey(Product, on_delete=models.CASCADE, verbose_name="–¢–æ–≤–∞—Ä")
    store           = models.ForeignKey(Store,   on_delete=models.CASCADE, verbose_name="–ú–∞–≥–∞–∑–∏–Ω")
    suggested_price = models.DecimalField("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞", max_digits=8, decimal_places=2)
    author_name     = models.CharField("–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è", max_length=120, blank=True)
    comment         = models.TextField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", blank=True)
    approved        = models.BooleanField("–û–¥–æ–±—Ä–µ–Ω–æ", default=False)
    sent_at         = models.DateTimeField("–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", auto_now_add=True)

    def __str__(self):
        return f"{self.product} –≤ {self.store} ‚Äì {self.suggested_price}‚ÇΩ"

class CartItem(models.Model):
    user     = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, verbose_name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    product  = models.ForeignKey(Product, on_delete=models.CASCADE, verbose_name="–¢–æ–≤–∞—Ä")
    store    = models.ForeignKey(Store, on_delete=models.CASCADE, verbose_name="–ú–∞–≥–∞–∑–∏–Ω", null=True)
    quantity = models.PositiveIntegerField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", default=1)
    added_at = models.DateTimeField("–î–æ–±–∞–≤–ª–µ–Ω–æ", auto_now_add=True)

    class Meta:
        unique_together = ("user", "product", "store")  # üëà –≤–∞–∂–Ω–æ!
        verbose_name = "–¢–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ"
        verbose_name_plural = "–ö–æ—Ä–∑–∏–Ω–∞"

    def __str__(self):
        return f"{self.user} ‚Äì {self.product} x{self.quantity}"


class Order(models.Model):
    user       = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    created_at = models.DateTimeField(default=timezone.now, editable=False)
    total      = models.DecimalField(max_digits=10, decimal_places=2)
    # –î–û–ë–ê–í–¨ –≠–¢–û –ø–æ–ª–µ:
    STATUS_CHOICES = [
        ('pending', '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ'),
        ('delivering', '–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è'),
        ('delivered', '–î–æ—Å—Ç–∞–≤–ª–µ–Ω'),
    ]
    status = models.CharField(
        max_length=20, choices=STATUS_CHOICES, default='pending', verbose_name='–°—Ç–∞—Ç—É—Å'
    )

    class Meta:
        ordering = ["-created_at"]

    def __str__(self):
        return f"–ó–∞–∫–∞–∑ #{self.id} –æ—Ç {self.created_at:%d.%m.%Y}"


class OrderItem(models.Model):
    order    = models.ForeignKey(Order, on_delete=models.CASCADE, related_name="items")
    product  = models.ForeignKey("Product", on_delete=models.CASCADE)
    quantity = models.PositiveIntegerField(default=1)      # –æ—Å—Ç–∞–≤–ª—è–µ–º default=1
    price    = models.DecimalField(max_digits=8, decimal_places=2)

    def __str__(self):
        return f"{self.product} x{self.quantity}"